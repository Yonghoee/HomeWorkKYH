컴파일러는 가상 함수를 호출할때 자료형을 참조하는 것이 아니라 객체 포인터를 이용해 함수를 호출하게 되는데
이를 구현하기 위해 컴파일러는 컴파일 단계에서 가상 함수를 가지는 모든 클래스에 대해 가상 함수 테이블을 생성하며
이때 컴파일러가 가상함수 테이블을 클래스 단위로 생성하는것은 객체의 메모리 크기를 줄이기 위해서이다.
만약 객체 메모리 영역에 직접 가상 함수 포인터를 생성한다면 가상 함수 개수에 비례하여 객체의 크기는 늘어나게 된다.
그래서 컴파일러는 가상함수를 가리키는 포인터를 테이블로 구성하고 이것을 클래스 단위로 생성한 다음
이 테이블에 대한 포인터를 객체 맨 앞에 4바이트에 설정함으로서 객체에 가상함수 테이블을 포함할수있다.

정답 : 뒤에 생긴다.